{"version":3,"sources":["Images/Forest.jpg","Images/NodeBoard.png","Images/schematic.png","Images/NodeDesign.png","Images/NodeShell.jpg","Images/BokaLogo.png","Images/fire.png","Components/Firebase.js","Components/Map.js","App.js","reportWebVitals.js","index.js"],"names":["FireBase","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","MapContainer","useState","sensorList","setSensorList","useEffect","database","ref","on","snapshot","sensors","val","id","push","selected","setSelected","console","log","googleMapsApiKey","mapContainerStyle","height","width","zoom","scrollWheelZoom","center","lat","lng","map","item","position","gps","onClick","onSelect","name","clickable","onCloseClick","temp","humidity","co2","App","className","role","href","src","logo","alt","forestimg","fire","nodeBoard","schematicDrawing","CAD","nodeShell","Map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67307001.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Forest.7fa0b463.jpg\";","export default __webpack_public_path__ + \"static/media/NodeBoard.86f4e5dd.png\";","export default __webpack_public_path__ + \"static/media/schematic.4acd7458.png\";","export default __webpack_public_path__ + \"static/media/NodeDesign.af0fffaf.png\";","export default __webpack_public_path__ + \"static/media/NodeShell.494456d5.jpg\";","export default __webpack_public_path__ + \"static/media/BokaLogo.b26b1ff9.png\";","export default __webpack_public_path__ + \"static/media/fire.79f32221.png\";","import firebase from \"firebase/compat/app\";\r\n\r\nconst config = {\r\n   //boka db \r\n   apiKey: \"AIzaSyC3hnKOPSGbzUIFRjLCICjDGSMqwTqs0qs\",\r\n   authDomain: \"boka-f89ec.firebaseapp.com\",\r\n   databaseURL: \"https://boka-f89ec-default-rtdb.firebaseio.com\",\r\n   projectId: \"boka-f89ec\",\r\n   storageBucket: \"boka-f89ec.appspot.com\",\r\n   messagingSenderId: \"574835943981\",\r\n   appId: \"1:574835943981:web:73d06a9d7db7df90a9e6a4\"\r\n };\r\n\r\nconst FireBase = firebase.initializeApp(config);\r\n\r\nexport default FireBase;","import React, { useState, useEffect } from 'react';\r\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\r\nimport FireBase from \"./Firebase\";\r\nimport database from 'firebase/compat/database';\r\n\r\nconst MapContainer = () => {\r\n  const [sensorList, setSensorList] = useState();\r\n  //fetches the data from realtime db on firebase\r\n  useEffect(()=>{\r\n    const sensorRef = FireBase.database().ref(\"sensors\");\r\n    sensorRef.on(\"value\", (snapshot)=>{\r\n      const sensors = snapshot.val();\r\n      const sensorList = [];\r\n      for(let id in sensors){\r\n        sensorList.push(sensors[id]);\r\n      }\r\n      setSensorList(sensorList)\r\n    })\r\n}, []);\r\n\r\n  const mapStyles = {        \r\n    height: \"80vh\",\r\n    width: \"100%\",\r\n  };\r\n  \r\n  const defaultCenter = {\r\n      lat: 33.6459,\r\n      lng: -117.8428\r\n  }\r\n\r\n  const [ selected, setSelected ] = useState({});\r\n\r\n  const onSelect = item => {\r\n    setSelected(item);\r\n  }\r\n\r\n  console.log(sensorList);\r\n  return (\r\n     <LoadScript\r\n       googleMapsApiKey='AIzaSyBDl7Fh7j9laMAUSMFiYxfAwkhuz_hjGSA'>\r\n        <GoogleMap\r\n          mapContainerStyle={mapStyles}\r\n          zoom={18}\r\n          scrollWheelZoom={false}\r\n          center={defaultCenter}>\r\n            {\r\n              sensorList? sensorList.map(item => {\r\n                return (\r\n                <Marker key={item.name} position={item.gps} onClick={() => onSelect(item)}/>\r\n                )\r\n              }) :\r\n              ''\r\n            }\r\n            {\r\n              selected.gps && \r\n              (\r\n                <InfoWindow\r\n                position={selected.gps}\r\n                clickable={true}\r\n                onCloseClick={() => setSelected({})}\r\n              >\r\n                <p>Name: {selected.name}\r\n                <br/>Temperature: {selected.temp}Â°C\r\n                <br/>Humidity: {selected.humidity}\r\n                <br/>CO2: {selected.co2}ppm\r\n                </p>\r\n                \r\n              </InfoWindow>\r\n              )\r\n            }\r\n          </GoogleMap>\r\n          \r\n     </LoadScript>\r\n     \r\n  )\r\n}\r\n\r\nexport default MapContainer;","import forestimg from \"./Images/Forest.jpg\";\r\nimport nodeBoard from \"./Images/NodeBoard.png\";\r\nimport schematicDrawing from \"./Images/schematic.png\";\r\nimport CAD from \"./Images/NodeDesign.png\";\r\nimport nodeShell from \"./Images/NodeShell.jpg\"\r\nimport logo from \"./Images/BokaLogo.png\";\r\nimport fire from \"./Images/fire.png\";\r\nimport \"./App.css\";\r\nimport MapContainer from \"./Components/Map\";\r\n\r\n\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n    <body className=\"whole-page\">\r\n      <header role=\"banner\" className=\"sticky-top\">\r\n        <nav id=\"navbar-primary\" className=\"navbar sticky-top\" role=\"navigation\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"collapse navbar-collapse\" id=\"navbar-primary-collapse\">\r\n              <ul className=\"nav navbar-nav\">\r\n                <li>\r\n                  <a href=\"index.html\">\r\n                    <img\r\n                      id=\"logo-navbar\"\r\n                      src={logo}\r\n                      width=\"200\"\r\n                      alt=\"Logo\"\r\n                    ></img>\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"index.html\" className=\"navButton\">home</a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#prod\" className=\"navButton\">product</a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#map\" className=\"navButton\">map</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n\r\n      <div className=\"landing-container\">\r\n        <img className=\"background\" src={forestimg} alt=\"\"></img>\r\n      </div>\r\n\r\n      <div className=\"caption\">\r\n      <img src={logo} id=\"logo\" alt=\"\" className=\"logoMain\"></img>\r\n        <h3 className=\"fireMonitoring\">a fire monitoring system</h3>\r\n        <hr/>\r\n        <a className=\"button1\" href=\"#map\">\r\n          see locations\r\n        </a>\r\n      </div>\r\n\r\n      <div className=\"information-section\">\r\n\r\n        <div className=\"backgroundInfo\">\r\n          <h2>The Problem</h2>\r\n          <hr/>\r\n          <div className=\"about\">\r\n            <div className=\"info1\">\r\n              <p>Forest fires have environmental, economic, and <br/>health related repercussions: </p>\r\n              <ol>\r\n                <li>In the United States, 10,122,336 acres of land were <br/> burned by forest fires in 2020</li>\r\n                <li>From 2015-2020, fire suppression costs averaged<br/> an annual $2.3 billion in the U.S.</li>\r\n                <li>Wildfire smoke can pollute the air up to 1000 km<br/> away, endangering the short and long-term health<br/> of those exposed</li>\r\n              </ol>\r\n            </div>\r\n            <div className=\"info2\">\r\n              <img src={fire} alt=\"fire\"></img>\r\n            </div>\r\n          </div>\r\n          \r\n          <h5> Watchtowers and satellite observation are among the traditional methods of forest fire detection. <br/> However, watchtowers rely on a labor force to regularly monitor during fire seasons and satellites can <br/>only provide images every two days (assuming weather has not affected the image quality). \r\n          </h5>\r\n        </div>\r\n\r\n        <div className=\"goalSection\" id=\"prod\">\r\n          <div className=\"columnOne\">\r\n           <img src={nodeBoard} id=\"node\" alt=\"\"></img>\r\n          </div>\r\n          <div className=\"columnTwo\"> \r\n          <img src={logo} id=\"goalLogo\" alt=\"\"></img>\r\n            <p id=\"right-text\">The goal of Boka is to provide an effective low-<br/>cost solution to early forest fire detection. Boka<br/>offers real-time fire risk assessment by utilizing a<br/>high quality CO2, temperature, and humidity<br/>sensor paired with LoRaWAN a long-range low-<br/>power wireless communication system perfect<br/>for vast forest environments.</p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"schematicInfo\">\r\n          <h1>Schematics</h1>\r\n          <hr/>\r\n          <p>evolution of our shell</p>\r\n          <div className=\"shellProgression\">\r\n            <div className=\"column\">\r\n              <img src={schematicDrawing} id=\"schematics\" alt=\"Node Scehmatic\"></img>\r\n            </div>\r\n            <div className=\"column\">\r\n              <img src={CAD} alt=\"Node CAD\"/>\r\n            </div>\r\n            <div className=\"column\">\r\n                <img src={nodeShell} alt=\"Node Encasing\"></img>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n\r\n\r\n        <div className=\"map-container\" id=\"map\">\r\n        <h1>Interactive Map</h1>\r\n        <hr/>\r\n        <p>map of nodes and their live readings</p>\r\n        <div className=\"map\">\r\n          <MapContainer/>\r\n        </div>\r\n        \r\n        </div>\r\n\r\n        <div className=\"credits\" >\r\n          <h5>\r\n            Hardware Team: Nathanial D., Adrian D.\r\n            <br/>\r\n            Software Team: Jaie P., Tetsuya V.\r\n          </h5>\r\n        </div>\r\n\r\n      </div>\r\n    \r\n    </body>\r\n  );\r\n}\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}